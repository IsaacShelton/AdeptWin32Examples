
pragma windows_only

foreign '__libs__/libuser32.a'
foreign '__libs__/libgdi32.a'

// https://docs.microsoft.com/en-us/windows/win32/winprog/windows-data-types
alias LRESULT = ptr
alias LPSTR = *ubyte
alias LPCSTR = *ubyte
alias ULONG_PTR = *ulong
alias DWORD_PRT = ULONG_PTR
alias WORD = ushort
alias HWND = HANDLE
alias HANDLE = ptr
alias UINT = uint
alias UINT_PTR = *uint
alias WPARAM = *uint
alias LPARAM = LONG_PTR
alias LONG_PTR = long
alias BOOL = int
alias HINSTANCE = HANDLE
alias HICON = HANDLE
alias HCURSOR = HANDLE
alias HMENU = HANDLE
alias HBRUSH = HANDLE
alias DWORD = uint
alias ATOM = WORD
alias LPCTSTR = *ubyte
alias LPVOID = ptr
alias BYTE = ubyte
alias HDC = HANDLE
alias HGDIOBJ = HANDLE
alias LONG = int
alias HRGN = HANDLE
alias HGLOBAL = HANDLE
alias SIZE_T = usize // ULONG_PTR

define NULL = null
define WM_CLOSE = 0x0010 // https://docs.microsoft.com/en-us/windows/win32/winmsg/wm-close
define WM_DESTROY = 0x0002 // https://docs.microsoft.com/en-us/windows/win32/winmsg/wm-destroy
define WM_COMMAND = 0x0111 // https://learn.microsoft.com/en-us/windows/win32/menurc/wm-command
define WM_CTLCOLORSTATIC = 0x0138 // https://github.com/tpn/winsdk-10/blob/9b69fd26ac0c7d0b83d378dba01080e93349c2ed/Include/10.0.10240.0/um/WinUser.h#L2218

define IDI_APPLICATION = MAKEINTRESOURCEA(32512) // https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-loadicona
define IDC_ARROW = MAKEINTRESOURCEA(32512) // https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-loadcursora

func LOWORD(dwValue DWORD) WORD = dwValue & 0xffff
func HIWORD(dwValue DWORD) WORD = (dwValue >> 16) & 0xffff
func LOBYTE(wValue WORD) BYTE = wValue & 0xff
func HIBYTE(wValue WORD) BYTE = (wValue >> 8) & 0xff
func LOWORD(value $T) WORD = LOWORD(value as DWORD)
func HIWORD(value $T) WORD = HIWORD(value as DWORD)
func LOBYTE(value $T) BYTE = LOBYTE(value as WORD)
func HIBYTE(value $T) BYTE = HIBYTE(value as WORD)

// https://stackoverflow.com/questions/3610565/why-does-makeintresource-work
func MAKEINTRESOURCEA(i int) LPSTR = cast LPSTR (cast ULONG_PTR (cast WORD i))

// https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getsyscolor
define COLOR_WINDOW = 5

// https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-messagebox
define MB_ICONEXCLAMATION = 0x00000030
define MB_OK = 0x00000000

// https://docs.microsoft.com/en-us/windows/win32/winmsg/extended-window-styles
define WS_EX_CLIENTEDGE = 0x00000200

// https://docs.microsoft.com/en-us/windows/win32/winmsg/window-styles
define WS_BORDER = 0x00800000
define WS_CAPTION = 0x00C00000
define WS_CHILD = 0x40000000
define WS_CHILDWINDOW = WS_CHILD
define WS_CLIPCHILDREN = 0x02000000
define WS_CLIPSIBLINGS = 0x04000000
define WS_DISABLED = 0x08000000
define WS_DLGFRAME = 0x00400000
define WS_GROUP = 0x00020000
define WS_HSCROLL = 0x00100000
define WS_ICONIC = WS_MINIMIZE
define WS_MAXIMIZE = 0x01000000
define WS_MAXIMIZEBOX = 0x00010000
define WS_MINIMIZE = 0x20000000
define WS_MINIMIZEBOX = 0x00020000
define WS_OVERLAPPED = 0x00000000
define WS_OVERLAPPEDWINDOW = WS_OVERLAPPED | WS_CAPTION | WS_SYSMENU | WS_THICKFRAME | WS_MINIMIZEBOX | WS_MAXIMIZEBOX
define WS_POPUP = 0x80000000
define WS_POPUPWINDOW = WS_POPUP | WS_BORDER | WS_SYSMENU
define WS_SIZEBOX = 0x00040000
define WS_SYSMENU = 0x00080000
define WS_TABSTOP = 0x00010000
define WS_THICKFRAME = 0x00040000
define WS_TILED = WS_OVERLAPPED
define WS_TILEDWINDOW = WS_OVERLAPPED | WS_CAPTION | WS_SYSMENU | WS_THICKFRAME | WS_MINIMIZEBOX | WS_MAXIMIZEBOX
define WS_VISIBLE = 0x10000000
define WS_VSCROLL = 0x00200000

// https://github.com/tpn/winsdk-10/blob/master/Include/10.0.10240.0/um/WinUser.h
define BS_DEFPUSHBUTTON = 0x00000001
define BS_CHECKBOX = 0x00000002
define BS_AUTOCHECKBOX = 0x00000003
define BS_RADIOBUTTON = 0x00000004
define BS_3STATE = 0x00000005
define BS_AUTO3STATE = 0x00000006
define BS_GROUPBOX = 0x00000007
define BS_USERBUTTON = 0x00000008
define BS_AUTORADIOBUTTON = 0x00000009
define BS_PUSHBOX = 0x0000000A
define BS_OWNERDRAW = 0x0000000B
define BS_TYPEMASK = 0x0000000F
define BS_LEFTTEXT = 0x00000020
define BS_TEXT = 0x00000000
define BS_ICON = 0x00000040
define BS_BITMAP = 0x00000080
define BS_LEFT = 0x00000100
define BS_RIGHT = 0x00000200
define BS_CENTER = 0x00000300
define BS_TOP = 0x00000400
define BS_BOTTOM = 0x00000800
define BS_VCENTER = 0x00000C00
define BS_PUSHLIKE = 0x00001000
define BS_MULTILINE = 0x00002000
define BS_NOTIFY = 0x00004000
define BS_FLAT = 0x00008000
define BS_RIGHTBUTTON = BS_LEFTTEXT

// https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-messageboxa
define MB_ABORTRETRYIGNORE = 0x00000002
define MB_CANCELTRYCONTINUE = 0x00000006
define MB_HELP = 0x00004000
define MB_OK = 0x00000000
define MB_OKCANCEL = 0x00000001
define MB_RETRYCANCEL = 0x00000005
define MB_YESNO = 0x00000004
define MB_YESNOCANCEL = 0x00000003
define MB_ICONEXCLAMATION = 0x00000030
define MB_ICONWARNING = 0x00000030
define MB_ICONINFORMATION = 0x00000040
define MB_ICONASTERISK = 0x00000040
define MB_ICONQUESTION = 0x00000020
define MB_ICONSTOP = 0x00000010
define MB_ICONERROR = 0x00000010
define MB_ICONHAND = 0x00000010
define MB_DEFBUTTON1 = 0x00000000
define MB_DEFBUTTON2 = 0x00000100
define MB_DEFBUTTON3 = 0x00000200
define MB_DEFBUTTON4 = 0x00000300
define MB_APPLMODAL = 0x00000000
define MB_SYSTEMMODAL = 0x00001000
define MB_TASKMODAL = 0x00002000
define MB_DEFAULT_DESKTOP_ONLY = 0x00020000
define MB_RIGHT = 0x00080000
define MB_RTLREADING = 0x00100000
define MB_SETFOREGROUND = 0x00010000
define MB_TOPMOST = 0x00040000
define MB_SERVICE_NOTIFICATION = 0x00200000
define IDABORT = 3
define IDCANCEL = 2
define IDCONTINUE = 11
define IDIGNORE = 5
define IDNO = 7
define IDOK = 1
define IDRETRY = 4
define IDTRYAGAIN = 10
define IDYES = 6

// https://stackoverflow.com/questions/47846642/include-doesnt-work-in-a-resource-file-visual-studio
define CW_USEDEFAULT = 0x80000000

// https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-destroywindow
foreign DestroyWindow(HWND) BOOL

// https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-postquitmessage
foreign PostQuitMessage(int) void

// https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-defwindowproca
foreign DefWindowProcA(HWND, UINT, WPARAM, LPARAM) LRESULT
func alias DefWindowProc => DefWindowProcA

// https://docs.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-wndclassexa
struct WNDCLASSEXA (
    cbSize UINT,
    style UINT,
    lpfnWndProc WNDPROC,
    cbClsExtra int,
    cbWndExtra int,
    hInstance HINSTANCE,
    hIcon HICON,
    hCursor HCURSOR,
    hbrBackground HBRUSH,
    lpszMenuName LPCSTR,
    lpszClassName LPCSTR,
    hIconSm HICON,
)
alias WNDCLASSEX = WNDCLASSEXA

// https://stackoverflow.com/questions/5082116/function-as-a-type
alias WNDPROC = stdcall func(HWND, UINT, WPARAM, LPARAM) LRESULT

// https://docs.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-msg
struct MSG (
    hwnd DWORD,
    message DWORD,
    wParam DWORD,
    lParam DWORD,
    time DWORD,
    pt DWORD,
    lPrivate DWORD,
)
alias LPMSG = *MSG

// https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-loadicona
foreign LoadIconA(HINSTANCE, LPCSTR) HICON
func alias LoadIcon => LoadIconA

// https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-loadcursora
foreign LoadCursorA(HINSTANCE, LPCSTR) HCURSOR
func alias LoadCursor => LoadCursorA

// https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-registerclassexa
foreign RegisterClassExA(*WNDCLASSEXA) ATOM
func alias RegisterClassEx => RegisterClassExA

// https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-messagebox
foreign MessageBoxA(HWND, LPCTSTR, LPCTSTR, UINT) int
func alias MessageBox => MessageBoxA

// https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-createwindowexa
foreign CreateWindowExA(DWORD, LPCSTR, LPCSTR, DWORD, int, int, int, int, HWND, HMENU, HINSTANCE, LPVOID) HWND

// https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-createwindowa
func alias CreateWindowEx => CreateWindowExA

func CreateWindowA(lpClassName LPCTSTR, lpWindowName LPCTSTR, dwStyle DWORD, x int, y int, nWidth int, nHeight int, hWndParent HWND, hMenu HMENU, hInstance HANDLE, lpParam LPVOID) HWND {
    return CreateWindowEx(0, lpClassName, lpWindowName, dwStyle, x, y, nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam)
}
func alias CreateWindow => CreateWindowA

// https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-showwindow
foreign ShowWindow(HWND, int) BOOL

// https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-updatewindow
foreign UpdateWindow(HWND) BOOL

// https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getmessage
foreign GetMessageA(LPMSG, HWND, UINT, UINT) BOOL
func alias GetMessage => GetMessageA

// https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-translatemessage
foreign TranslateMessage(*MSG) BOOL

// https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-dispatchmessage
foreign DispatchMessageA(*MSG) LRESULT
func alias DispatchMessage => DispatchMessageA

define TRANSPARENT = 1
define OPAQUE = 2
define BKMODE_LAST = 2

foreign SetBkMode(hdc HDC, mode int) int

// https://github.com/tpn/winsdk-7/blob/f8a2d5f306b400f355ed3713b93725e6b8f69f1c/v7.1A/Include/WinGDI.h#L3654
foreign GetStockObject(i int) HGDIOBJ

// https://github.com/tpn/winsdk-7/blob/f8a2d5f306b400f355ed3713b93725e6b8f69f1c/v7.1A/Include/WinGDI.h#L1645-L1662
/* Stock Logical Objects */
define WHITE_BRUSH = 0
define LTGRAY_BRUSH = 1
define GRAY_BRUSH = 2
define DKGRAY_BRUSH = 3
define BLACK_BRUSH = 4
define NULL_BRUSH = 5
define HOLLOW_BRUSH = NULL_BRUSH
define WHITE_PEN = 6
define BLACK_PEN = 7
define NULL_PEN = 8
define OEM_FIXED_FONT = 10
define ANSI_FIXED_FONT = 11
define ANSI_VAR_FONT = 12
define SYSTEM_FONT = 13
define DEVICE_DEFAULT_FONT = 14
define DEFAULT_PALETTE = 15
define SYSTEM_FIXED_FONT = 16

// https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setdlgitemtexta
foreign SetDlgItemTextA(hDlg HWND, nIDDlgItem int, lpString LPCSTR) BOOL
func alias SetDlgItemText => SetDlgItemTextA

foreign SetWindowTextA(hWnd HWND, lpString LPCSTR) BOOL
func alias SetWindowText => SetWindowTextA

// https://learn.microsoft.com/en-us/windows/win32/api/windef/ns-windef-rect
struct RECT (left, top, right, buttom LONG)

// https://learn.microsoft.com/en-us/previous-versions/dd162805(v=vs.85)
struct POINT (x, y LONG)

// https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-invalidaterect
foreign InvalidateRect(hWnd HWND, lpRect *RECT, bErase BOOL) BOOL

// https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getwindowrect
foreign GetWindowRect(hWnd HWND, lpRect *RECT) BOOL

// https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-screentoclient
foreign ScreenToClient(hWnd HWND, lpPOINT *POINT) BOOL

// https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-mapwindowpoints
foreign MapWindowPoints(hwndFrom HWND, hWndTo HWND, lpPoints *POINT, cPoints UINT) int

// https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-redrawwindow
foreign RedrawWindow(hWnd HWND, lprcUpdate *RECT, hrgnUpdate HRGN, flags UINT) BOOL

// https://github.com/tpn/winsdk-10/blob/9b69fd26ac0c7d0b83d378dba01080e93349c2ed/Include/10.0.10240.0/um/WinUser.h#L8390-L8408
/*
 * RedrawWindow() flags
 */
define RDW_INVALIDATE = 0x0001
define RDW_INTERNALPAINT = 0x0002
define RDW_ERASE = 0x0004
define RDW_VALIDATE = 0x0008
define RDW_NOINTERNALPAINT = 0x0010
define RDW_NOERASE = 0x0020
define RDW_NOCHILDREN = 0x0040
define RDW_ALLCHILDREN = 0x0080
define RDW_UPDATENOW = 0x0100
define RDW_ERASENOW = 0x0200
define RDW_FRAME = 0x0400
define RDW_NOFRAME = 0x0800

// https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getdlgitem
foreign GetDlgItem(hDlg HWND, nIDDlgItem int) HWND

// https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getclientrect
foreign GetClientRect(hWnd HWND, lpRect *RECT) BOOL

// https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-globalalloc
define GHND = 0x0042
define GMEM_FIXED = 0x0000
define GMEM_MOVEABLE = 0x0002
define GMEM_ZEROINIT = 0x0040
define GPTR = 0x0040
foreign GlobalAlloc(uFlags UINT, dwBytes SIZE_T) HGLOBAL

// https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-globalfree
foreign GlobalFree(hMem HGLOBAL) HGLOBAL


// https://github.com/tpn/winsdk-10/blob/9b69fd26ac0c7d0b83d378dba01080e93349c2ed/Include/10.0.10240.0/um/WinUser.h#L10762-L10780
/*
 * Edit Control Styles
 */
define ES_LEFT = 0x0000
define ES_CENTER = 0x0001
define ES_RIGHT = 0x0002
define ES_MULTILINE = 0x0004
define ES_UPPERCASE = 0x0008
define ES_LOWERCASE = 0x0010
define ES_PASSWORD = 0x0020
define ES_AUTOVSCROLL = 0x0040
define ES_AUTOHSCROLL = 0x0080
define ES_NOHIDESEL = 0x0100
define ES_OEMCONVERT = 0x0400
define ES_READONLY = 0x0800
define ES_WANTRETURN = 0x1000
define ES_NUMBER = 0x2000

// https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getwindowtexta
foreign GetWindowTextA(hWnd HWND, lpString LPSTR, nMaxCount int) int
